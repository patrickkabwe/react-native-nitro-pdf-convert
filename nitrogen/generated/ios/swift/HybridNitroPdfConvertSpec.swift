///
/// HybridNitroPdfConvertSpec.swift
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2025 Marc Rousavy @ Margelo
///

import Foundation
import NitroModules

/// See ``HybridNitroPdfConvertSpec``
public protocol HybridNitroPdfConvertSpec_protocol: HybridObject {
  // Properties
  

  // Methods
  func toImages(pdfPath: String) throws -> Promise<[PdfConvertResult]>
  func toPdf(imagePath: String) throws -> Promise<PdfConvertResult>
}

/// See ``HybridNitroPdfConvertSpec``
public class HybridNitroPdfConvertSpec_base {
  private weak var cxxWrapper: HybridNitroPdfConvertSpec_cxx? = nil
  public func getCxxWrapper() -> HybridNitroPdfConvertSpec_cxx {
  #if DEBUG
    guard self is HybridNitroPdfConvertSpec else {
      fatalError("`self` is not a `HybridNitroPdfConvertSpec`! Did you accidentally inherit from `HybridNitroPdfConvertSpec_base` instead of `HybridNitroPdfConvertSpec`?")
    }
  #endif
    if let cxxWrapper = self.cxxWrapper {
      return cxxWrapper
    } else {
      let cxxWrapper = HybridNitroPdfConvertSpec_cxx(self as! HybridNitroPdfConvertSpec)
      self.cxxWrapper = cxxWrapper
      return cxxWrapper
    }
  }
}

/**
 * A Swift base-protocol representing the NitroPdfConvert HybridObject.
 * Implement this protocol to create Swift-based instances of NitroPdfConvert.
 * ```swift
 * class HybridNitroPdfConvert : HybridNitroPdfConvertSpec {
 *   // ...
 * }
 * ```
 */
public typealias HybridNitroPdfConvertSpec = HybridNitroPdfConvertSpec_protocol & HybridNitroPdfConvertSpec_base
